#!/usr/bin/env bash
#
# --- SCRIPT SIGNATURE --- #
#
#        â–„â–„                                                                                     â–„â–„â–„â–„      â–ˆâ–ˆ     â–„â–„â–„â–„
#        â–ˆâ–ˆ                                                                â–ˆâ–ˆ                  â–ˆâ–ˆâ–€â–€â–€      â–€â–€     â–€â–€â–ˆâ–ˆ
#   â–„â–ˆâ–ˆâ–ˆâ–„â–ˆâ–ˆ   â–„â–ˆâ–ˆâ–ˆâ–ˆâ–„  â–ˆâ–ˆ      â–ˆâ–ˆ â–ˆâ–ˆâ–„â–ˆâ–ˆâ–ˆâ–ˆâ–„             â–„â–ˆâ–ˆâ–ˆâ–ˆâ–„   â–€â–ˆâ–ˆ  â–ˆâ–ˆâ–€  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ             â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–ˆâ–ˆ       â–ˆâ–ˆ       â–„â–ˆâ–ˆâ–ˆâ–ˆâ–„
#  â–ˆâ–ˆâ–€  â–€â–ˆâ–ˆ  â–ˆâ–ˆâ–€  â–€â–ˆâ–ˆ â–€â–ˆ  â–ˆâ–ˆ  â–ˆâ–€ â–ˆâ–ˆâ–€   â–ˆâ–ˆ            â–ˆâ–ˆâ–„â–„â–„â–„â–ˆâ–ˆ    â–ˆâ–ˆâ–ˆâ–ˆ      â–ˆâ–ˆ                  â–ˆâ–ˆ         â–ˆâ–ˆ       â–ˆâ–ˆ      â–ˆâ–ˆâ–„â–„â–„â–„â–ˆâ–ˆ
#  â–ˆâ–ˆ    â–ˆâ–ˆ  â–ˆâ–ˆ    â–ˆâ–ˆ  â–ˆâ–ˆâ–„â–ˆâ–ˆâ–„â–ˆâ–ˆ  â–ˆâ–ˆ    â–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–€â–€â–€â–€â–€â–€    â–„â–ˆâ–ˆâ–„      â–ˆâ–ˆ       â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ      â–ˆâ–ˆ         â–ˆâ–ˆ       â–ˆâ–ˆ      â–ˆâ–ˆâ–€â–€â–€â–€â–€â–€
#  â–€â–ˆâ–ˆâ–„â–„â–ˆâ–ˆâ–ˆ  â–€â–ˆâ–ˆâ–„â–„â–ˆâ–ˆâ–€  â–€â–ˆâ–ˆ  â–ˆâ–ˆâ–€  â–ˆâ–ˆ    â–ˆâ–ˆ            â–€â–ˆâ–ˆâ–„â–„â–„â–„â–ˆ   â–„â–ˆâ–€â–€â–ˆâ–„     â–ˆâ–ˆâ–„â–„â–„               â–ˆâ–ˆ      â–„â–„â–„â–ˆâ–ˆâ–„â–„â–„    â–ˆâ–ˆâ–„â–„â–„   â–€â–ˆâ–ˆâ–„â–„â–„â–„â–ˆ
#    â–€â–€â–€ â–€â–€    â–€â–€â–€â–€     â–€â–€  â–€â–€   â–€â–€    â–€â–€              â–€â–€â–€â–€â–€   â–€â–€â–€  â–€â–€â–€     â–€â–€â–€â–€               â–€â–€      â–€â–€â–€â–€â–€â–€â–€â–€     â–€â–€â–€â–€     â–€â–€â–€â–€â–€
#
#
# --- DESCRIPTION --- #
# Downloads VS Code extensions as .vsix files from a JSON file
# --- DEPENDENCIES --- #
# - jq
# - wget
# --- END SIGNATURE --- #

set -eo pipefail
trap 'exit 1' SIGUSR1

eval "$(include "lib/cmdarg.sh")"
eval "$(include "check-deps")"
checkDeps "$0"

cmdarg_info "header" "$(get-desc "$0")"
cmdarg_parse "$@"
# ---  Main script logic --- #
file="${argv[0]:-extensions.json}"
declare -a extensions
if [[ -f "${file}" ]]; then
  # Attempt to read JSON file contents
  mapfile -t extensions < <(jq -r '.[]' "${file}" 2>/dev/null) || log-error "Failed to parse '${file}'"

  # Create extensions directory if it does not exist
  [[ ! -d "extensions" ]] && mkdir -p "extensions"
else
  log-error "File '${file}' not found."
fi

count=0
for extension in "${extensions[@]}"; do
  publisher=$(echo "${extension}" | cut -d '.' -f 1)
  extensionName=$(echo "${extension}" | cut -d '.' -f 2)
  url="https://${publisher}.gallery.vsassets.io/_apis/public/gallery/publisher/${publisher}/extension/${extensionName}/latest/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage"

  # Construct the filename for the .vsix file
  filename="${extensionName}.vsix"

  # Check if the file already exists in the directory
  if [[ -f "$(pwd)/extensions/${filename}" ]]; then
    log-warning "Skipping ${filename}. File already exists."
  else
    # Download the .vsix file
    if ! wget -O "$(pwd)/extensions/${filename}" "${url}"; then
      log-error "Failed to download ${filename}."
    else
      ((++count))
      log-info "Downloaded ${filename}"
    fi
  fi
done

log-success "Downloaded ${count} extensions ðŸš€"
