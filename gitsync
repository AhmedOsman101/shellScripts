#!/usr/bin/env bash

# shellcheck disable=SC1091
source logs.sh

isGitRepo="$(ls -a | rg '.git')"

if [[ -z "$isGitRepo" ]]; then
  log_error "$PWD is not a git repository."
fi

timestamp="$(date +"%Y-%m-%d@%I:%M%p")"

display_help() {
  cat <<HELP
This script automates the process of adding changes, committing them with a timestamp, and pushing the changes to the remote repository.

Options:
  -h, --help          Show this help message and exit.
  -b <branch>         Specify the branch to work on. If not provided, defaults to 'main'.

Description:
  1. If no options are passed, the script defaults to working on the 'main' branch.
  2. Uses the current timestamp to create a meaningful commit message.
  3. Logs the status of commit and push operations.
HELP

}

# Check if no options are passed
if [ $# -eq 0 ]; then
  branch="$(git rev-parse --abbrev-ref HEAD)"
fi

# Use getopts to parse options
while getopts "hb" opt 2>/dev/null; do
  case $opt in
  h)
    display_help
    exit 0
    ;;
  b)
    if [[ -z "$2" ]]; then
      log_error "You must pass a branch when using -b option."
    else
      if [[ "$branch" != "$2" ]]; then
        git checkout "$branch"
      fi
      branch="$2"
    fi
    ;;
  \?)
    log_error "Invalid option $OPTARG"
    ;;
  esac
done

main() {
  git add "*"

  git commit -am "Updated Files ${timestamp}" && log_info "Committed Changes Locally ${timestamp}"

  git push origin "$branch" && log_info "Changes pushed to $branch successfully!"
}

main
