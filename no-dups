#!/usr/bin/env bash

# --- SCRIPT SIGNATURE --- #
#
#                                      ▄▄
#                                      ██
#  ██▄████▄   ▄████▄              ▄███▄██  ██    ██  ██▄███▄   ▄▄█████▄
#  ██▀   ██  ██▀  ▀██            ██▀  ▀██  ██    ██  ██▀  ▀██  ██▄▄▄▄ ▀
#  ██    ██  ██    ██   █████    ██    ██  ██    ██  ██    ██   ▀▀▀▀██▄
#  ██    ██  ▀██▄▄██▀            ▀██▄▄███  ██▄▄▄███  ███▄▄██▀  █▄▄▄▄▄██
#  ▀▀    ▀▀    ▀▀▀▀                ▀▀▀ ▀▀   ▀▀▀▀ ▀▀  ██ ▀▀▀     ▀▀▀▀▀▀
#                                                    ██
#
# --- DESCRIPTION --- #
# Removes duplicate lines from a file or stdin, with options for backup, output as array, and quiet mode
# --- DEPENDENCIES --- #
# - tr
# - awk
# - paste
# - mktemp
# --- END SIGNATURE --- #

set -eo pipefail

trap 'exit 1' SIGUSR1

source cmdarg.sh

source check-deps
checkDeps "$0"
# ---  Main script logic --- #
cmdarg_info "header" "$(get-desc $0)"

cmdarg "b" "backup" "Creates a backup .bak file of the original file"
cmdarg "a" "array" "Returns the output as a bash compatible array"
cmdarg "q" "quiet" "Runs quietly without output on success"

cmdarg_parse "$@"

useBackup=${cmdarg_cfg['backup']}
useArray=${cmdarg_cfg['array']}
quiet=${cmdarg_cfg['quiet']}

# Function to process input and remove duplicates
remove_duplicates() {
  if [[ ${useArray} == true ]]; then
    tr ' ' '\n' | awk '!a[$0]++' | paste -sd " "
  else
    awk '!a[$0]++'
  fi
}

# Check if input is from a file or stdin
if [[ $# -eq 0 || $1 == "-" ]]; then
  remove_duplicates
else
  file="$1"
  tmpfile="$(mktemp)"
  trap 'rm -f $tmpfile' EXIT

  # Read from file
  if [[ -f ${file} ]]; then
    if [[ ${useBackup} == true ]]; then
      cp -i "${file}" "${file}.bak"

      [[ ${quiet} == true ]] || log-info "Backup created as ${file}.bak"
    fi
    remove_duplicates <"${file}" >"${tmpfile}"
    mv -i "${tmpfile}" "${file}"

    [[ ${quiet} == true ]] || log-info "Duplicates removed from '${file}'!"
  else
    log-error "File: '${file}' was not found!"
  fi
fi
