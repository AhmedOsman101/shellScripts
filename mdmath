#!/usr/bin/env bash

# --- SCRIPT SIGNATURE --- #
#
#                  ▄▄                                ▄▄
#                  ██                        ██      ██
#  ████▄██▄   ▄███▄██  ████▄██▄   ▄█████▄  ███████   ██▄████▄
#  ██ ██ ██  ██▀  ▀██  ██ ██ ██   ▀ ▄▄▄██    ██      ██▀   ██
#  ██ ██ ██  ██    ██  ██ ██ ██  ▄██▀▀▀██    ██      ██    ██
#  ██ ██ ██  ▀██▄▄███  ██ ██ ██  ██▄▄▄███    ██▄▄▄   ██    ██
#  ▀▀ ▀▀ ▀▀    ▀▀▀ ▀▀  ▀▀ ▀▀ ▀▀   ▀▀▀▀ ▀▀     ▀▀▀▀   ▀▀    ▀▀
#
#
# --- DESCRIPTION --- #
# Replaces LaTeX math delimiters with Obsidian's delimiters in a given file
# --- DEPENDENCIES --- #
#
# --- END SIGNATURE --- #

set -euo pipefail

trap 'exit 1' SIGUSR1

eval "$(include "lib/helpers.sh")"

# ---  Main script logic --- #
# Check if the correct number of arguments is passed
if [[ -z $1 || $# -gt 1 ]]; then
  log-warning "Usage: $(basename "$0") <file>"
  exit 1
fi

# Assign arguments to variables for clarity
file="$1"

# Check if the file exists
[[ ! -f ${file} ]] && log-error "File '${file}' does not exist."

# Initialize replacement counts
# Count occurrences of all delimiters to be replaced
count_display=0
count_inline=0

if grep -o '\\\[' "${file}" -q; then
  count_display=$(grep -o '\\\[' "${file}" | wc -l)
fi

if grep -o '\\(' "${file}" -q; then
  count_inline=$(grep -o '\\(' "${file}" | wc -l)
fi

count=$((count_display + count_inline))

if [[ ${count} -eq 0 ]]; then
  terminate "Nothing to do"
fi

# Perform the replacements
sed -i -e 's~\\\[~$$~g' \
  -e 's~\\\]~$$~g' \
  -e 's~ \\)~$~g' \
  -e 's~\\( ~$~g' \
  -e 's~\\(~$~g' \
  -e 's~\\)~$~g' "${file}" &&
  log-success "${count} Replacements made"
