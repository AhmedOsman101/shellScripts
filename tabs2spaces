#!/usr/bin/env bash

# --- SCRIPT SIGNATURE --- #
#
#                      ▄▄                   ▄▄▄▄▄
#    ██                ██                  █▀▀▀▀██▄
#  ███████    ▄█████▄  ██▄███▄   ▄▄█████▄        ██  ▄▄█████▄  ██▄███▄    ▄█████▄   ▄█████▄   ▄████▄   ▄▄█████▄
#    ██       ▀ ▄▄▄██  ██▀  ▀██  ██▄▄▄▄ ▀      ▄█▀   ██▄▄▄▄ ▀  ██▀  ▀██   ▀ ▄▄▄██  ██▀    ▀  ██▄▄▄▄██  ██▄▄▄▄ ▀
#    ██      ▄██▀▀▀██  ██    ██   ▀▀▀▀██▄    ▄█▀      ▀▀▀▀██▄  ██    ██  ▄██▀▀▀██  ██        ██▀▀▀▀▀▀   ▀▀▀▀██▄
#    ██▄▄▄   ██▄▄▄███  ███▄▄██▀  █▄▄▄▄▄██  ▄██▄▄▄▄▄  █▄▄▄▄▄██  ███▄▄██▀  ██▄▄▄███  ▀██▄▄▄▄█  ▀██▄▄▄▄█  █▄▄▄▄▄██
#     ▀▀▀▀    ▀▀▀▀ ▀▀  ▀▀ ▀▀▀     ▀▀▀▀▀▀   ▀▀▀▀▀▀▀▀   ▀▀▀▀▀▀   ██ ▀▀▀     ▀▀▀▀ ▀▀    ▀▀▀▀▀     ▀▀▀▀▀    ▀▀▀▀▀▀
#                                                              ██
#
# --- DESCRIPTION --- #
# Converts tabs into 2 spaces
# --- DEPENDENCIES --- #
#
# --- END SIGNATURE --- #

set -eo pipefail

trap 'exit 1' SIGUSR1

eval "$(include "check-deps")"
checkDeps "$0"
# ---  Main script logic --- #
if [[ $# -eq 0 || $1 == "-" ]]; then
  str=$(cat)
elif [[ -f "$1" ]]; then
  sed 's|\t|  |g' -i "$1"
  exit 0
else
  str="$*"
fi

if [[ -z ${str} ]]; then
  printf ""
  exit 0
fi

# ${var//search/replace} -> same as `echo ${var} | sed 's|search|replace|g'`
printf '%s\n' "${str//$'\t'/  }"
