#!/usr/bin/env bash
#
# --- SCRIPT SIGNATURE --- #
#
#     ██                  ██
#     ▀▀                  ▀▀
#   ████      ▄████▄    ████     ██▄████▄   ▄█████▄   ██▄████   ██▄████
#     ██     ██▀  ▀██     ██     ██▀   ██   ▀ ▄▄▄██   ██▀       ██▀
#     ██     ██    ██     ██     ██    ██  ▄██▀▀▀██   ██        ██
#     ██     ▀██▄▄██▀  ▄▄▄██▄▄▄  ██    ██  ██▄▄▄███   ██        ██
#     ██       ▀▀▀▀    ▀▀▀▀▀▀▀▀  ▀▀    ▀▀   ▀▀▀▀ ▀▀   ▀▀        ▀▀
#  ████▀
#
# --- DESCRIPTION --- #
# Joins text using a given separator
# --- DEPENDENCIES --- #
#
# --- END SIGNATURE --- #

set -eo pipefail
trap 'exit 1' SIGUSR1

eval "$(include "lib/cmdarg.sh")"
eval "$(include "lib/helpers.sh")"
eval "$(include "check-deps")"
checkDeps "$0"

# --- cmdarg setup --- #
scriptName="$0"
cmdarg_info "header" "$(get-desc "${scriptName}")"
cmdarg_parse "$@"
# ---  Main script logic --- #

# Check for separator argument
if ((argc < 1)); then
  printRed "Usage: $(basename scriptName) <separator> <array...>" 1>&2
  log-error "Separator is required"
fi

separator="${argv[0]}"

declare i
# Join and output elements
for ((i = 1; i < argc - 1; i++)); do
  # NOTE: %b -> expand backslash escape sequences in the corresponding argument
  printf '%s%b' "${argv[${i}]}" "${separator}"
done

printf '%s\n' "${argv[${i}]}"

exit 0
