#!/usr/bin/env bash

# --- SCRIPT SIGNATURE --- #
#
#     â–ˆâ–ˆ                                             â–„â–„â–„â–„      â–„â–„â–„â–„                                                                            â–„â–„â–„â–„         â–ˆâ–ˆ
#     â–€â–€                           â–ˆâ–ˆ                â–€â–€â–ˆâ–ˆ      â–€â–€â–ˆâ–ˆ                                      â–ˆâ–ˆ                                    â–€â–€â–ˆâ–ˆ         â–€â–€
#   â–ˆâ–ˆâ–ˆâ–ˆ     â–ˆâ–ˆâ–„â–ˆâ–ˆâ–ˆâ–ˆâ–„  â–„â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„    â–ˆâ–ˆ        â–ˆâ–ˆ                 â–„â–ˆâ–ˆâ–ˆâ–ˆâ–„   â–€â–ˆâ–ˆ  â–ˆâ–ˆâ–€  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ              â–„â–ˆâ–ˆâ–ˆâ–ˆâ–„   â–ˆâ–ˆâ–„â–ˆâ–ˆâ–ˆâ–ˆâ–„    â–ˆâ–ˆ       â–ˆâ–ˆâ–ˆâ–ˆ     â–ˆâ–ˆâ–„â–ˆâ–ˆâ–ˆâ–ˆâ–„   â–„â–ˆâ–ˆâ–ˆâ–ˆâ–„
#     â–ˆâ–ˆ     â–ˆâ–ˆâ–€   â–ˆâ–ˆ  â–ˆâ–ˆâ–„â–„â–„â–„ â–€    â–ˆâ–ˆ       â–€ â–„â–„â–„â–ˆâ–ˆ    â–ˆâ–ˆ        â–ˆâ–ˆ                â–ˆâ–ˆâ–„â–„â–„â–„â–ˆâ–ˆ    â–ˆâ–ˆâ–ˆâ–ˆ      â–ˆâ–ˆ                â–ˆâ–ˆâ–€  â–€â–ˆâ–ˆ  â–ˆâ–ˆâ–€   â–ˆâ–ˆ    â–ˆâ–ˆ         â–ˆâ–ˆ     â–ˆâ–ˆâ–€   â–ˆâ–ˆ  â–ˆâ–ˆâ–„â–„â–„â–„â–ˆâ–ˆ
#     â–ˆâ–ˆ     â–ˆâ–ˆ    â–ˆâ–ˆ   â–€â–€â–€â–€â–ˆâ–ˆâ–„    â–ˆâ–ˆ      â–„â–ˆâ–ˆâ–€â–€â–€â–ˆâ–ˆ    â–ˆâ–ˆ        â–ˆâ–ˆ       â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–€â–€â–€â–€â–€â–€    â–„â–ˆâ–ˆâ–„      â–ˆâ–ˆ       â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    â–ˆâ–ˆ    â–ˆâ–ˆ  â–ˆâ–ˆ    â–ˆâ–ˆ    â–ˆâ–ˆ         â–ˆâ–ˆ     â–ˆâ–ˆ    â–ˆâ–ˆ  â–ˆâ–ˆâ–€â–€â–€â–€â–€â–€
#  â–„â–„â–„â–ˆâ–ˆâ–„â–„â–„  â–ˆâ–ˆ    â–ˆâ–ˆ  â–ˆâ–„â–„â–„â–„â–„â–ˆâ–ˆ    â–ˆâ–ˆâ–„â–„â–„   â–ˆâ–ˆâ–„â–„â–„â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆâ–„â–„â–„     â–ˆâ–ˆâ–„â–„â–„             â–€â–ˆâ–ˆâ–„â–„â–„â–„â–ˆ   â–„â–ˆâ–€â–€â–ˆâ–„     â–ˆâ–ˆâ–„â–„â–„             â–€â–ˆâ–ˆâ–„â–„â–ˆâ–ˆâ–€  â–ˆâ–ˆ    â–ˆâ–ˆ    â–ˆâ–ˆâ–„â–„â–„   â–„â–„â–„â–ˆâ–ˆâ–„â–„â–„  â–ˆâ–ˆ    â–ˆâ–ˆ  â–€â–ˆâ–ˆâ–„â–„â–„â–„â–ˆ
#  â–€â–€â–€â–€â–€â–€â–€â–€  â–€â–€    â–€â–€   â–€â–€â–€â–€â–€â–€      â–€â–€â–€â–€    â–€â–€â–€â–€ â–€â–€     â–€â–€â–€â–€      â–€â–€â–€â–€               â–€â–€â–€â–€â–€   â–€â–€â–€  â–€â–€â–€     â–€â–€â–€â–€               â–€â–€â–€â–€    â–€â–€    â–€â–€     â–€â–€â–€â–€   â–€â–€â–€â–€â–€â–€â–€â–€  â–€â–€    â–€â–€    â–€â–€â–€â–€â–€
#
#
# --- DESCRIPTION --- #
# Installs VS Code extensions from a JSON file by combining with online extensions
# --- DEPENDENCIES --- #
# - code
# - jq
# - gum
# --- END SIGNATURE --- #

set -euo pipefail

trap 'exit 1' SIGUSR1

eval "$(include "check-deps")"
checkDeps "$0"
# ---  Main script logic --- #
origin="$1"

file=$(mktemp -t "XXXXXX.json")
trap 'rm -f $file' EXIT

get-ext "${file}" -o &>/dev/null

[[ ! -s "${origin}" ]] && {
  log-warning "No entries found in ${origin}" || exit 0
}

if [[ -s "${file}" ]]; then
  # Combine JSON files with only unique enteries as an array
  if ! extensions="$(jq -s '[.[][]] | unique | .[]' -r "${origin}" "${file}")"; then
    log-error "Failed to parse '${file}'"
  fi

else
  log-warning "No new entries found in ${file}" || exit 0
fi

for extension in ${extensions}; do
  extensionName=$(echo "${extension}" | cut -d '.' -f 2)

  if gum spin \
    --title "Installing ${extensionName}..." \
    --title.foreground="${U_CYAN}" \
    --spinner.foreground="${U_CYAN}" \
    -- repeat-it --preserve "code --install-extension ${extension} --force &>/dev/null"; then
    log-info "Installed ${extensionName}"
  fi
done

log-success "Installation Done ðŸš€"
