#!/usr/bin/env bash

# --- SCRIPT SIGNATURE --- #
#
#            ▄▄                                         ██
#            ██                                         ▀▀                 ██
#  ████▄██▄  ██ ▄██▀   ▄▄█████▄   ▄█████▄   ██▄████   ████     ██▄███▄   ███████
#  ██ ██ ██  ██▄██     ██▄▄▄▄ ▀  ██▀    ▀   ██▀         ██     ██▀  ▀██    ██
#  ██ ██ ██  ██▀██▄     ▀▀▀▀██▄  ██         ██          ██     ██    ██    ██
#  ██ ██ ██  ██  ▀█▄   █▄▄▄▄▄██  ▀██▄▄▄▄█   ██       ▄▄▄██▄▄▄  ███▄▄██▀    ██▄▄▄
#  ▀▀ ▀▀ ▀▀  ▀▀   ▀▀▀   ▀▀▀▀▀▀     ▀▀▀▀▀    ▀▀       ▀▀▀▀▀▀▀▀  ██ ▀▀▀       ▀▀▀▀
#                                                              ██
#
# --- DESCRIPTION --- #
# Automatically creates bash scripts with optional flags for temporary or named files, and copies the script name to the clipboard if temporary
# --- DEPENDENCIES --- #
# - gum
# --- END SIGNATURE --- #

set -eo pipefail

trap 'exit 1' SIGUSR1

source cmdarg.sh

source check-deps
checkDeps "$0"
# ---  Main script logic --- #
cmdarg_info "header" "$(get-desc $0)"

cmdarg "t" "temp" "Creates the script at /tmp and copies its name to clipboard"
cmdarg "f?" "file" "Creates the script with the given name in the current working directory" ""

cmdarg_parse "$@"

# Store option values
isTemp=${cmdarg_cfg['temp']}
filename=${cmdarg_cfg['file']}
no_flags=false
file=""

[[ ${isTemp} != true && -z ${filename} ]] && no_flags=true

scriptContent=$(
  cat <<EOF
#!/usr/bin/env bash

set -euo pipefail

trap 'exit 1' SIGUSR1

source check-deps
checkDeps "$0"
# ---  Main script logic --- #

EOF
)

validateAndCreateFile() {
  local file=$1
  [[ -f "${file}" ]] && log-error "The script '$(basename "${file}")' already exists at '${file}'!"

  touch "${file}" || log-error "Failed to create file '${file}'"

  chmod u+x "${file}" || log-error "Failed to make '$(basename "${file}")' executable"
}

if [[ "${isTemp}" == true ]]; then
  file=$(mktemp -t XXXXX-script.sh)

  chmod u+x "${file}" || log-error "Failed to make '$(basename "${file}")' executable"

  name="${file}"
  clipcopy "${file}"
  echo "${scriptContent}" >"${file}"
  log-info "The script name was copied to clipboard"

elif [[ "${no_flags}" == true ]]; then
  if [[ -n ${cmdarg_argv[0]} ]]; then
    name=${cmdarg_argv[0]}
  else
    name=$(gum input --placeholder "Enter Script's name: ") || log-error "Failed to capture the script name"
  fi
  file="${SCRIPTS_DIR}/${name}"

  validateAndCreateFile "${file}"

  mkdir -p "$(dirname "${file}")" 2>/dev/null
  name="$(basename "${file}")"
  make-signature "${name}" " " "" >"${file}"

elif [[ -z "${filename}" ]]; then
  name=$(gum input --placeholder "Enter Script's name: ") || log-error "Failed to capture the script name"
  file="${PWD}/${name}"

  validateAndCreateFile "${file}"

  mkdir -p "$(dirname "${file}")" 2>/dev/null
  name="$(basename "${file}")"

  make-signature "${name}" " " "" >"${file}"

  if [[ "${name}" != *.sh ]]; then
    gum confirm "Do you want to add .sh extension to your script?" && {
      rm -f "${file}"
      file="${PWD}/${name}.sh"
      validateAndCreateFile "${file}"
    }
  fi

elif [[ -n "${filename}" ]]; then
  file="${PWD}/${filename}"

  validateAndCreateFile "${file}"

  mkdir -p "$(dirname "${file}")" 2>/dev/null
  name="$(basename "${file}")"

  if [[ "${name}" != *.sh ]]; then
    gum confirm "Do you want to add .sh extension to your script?" && {
      rm -f "${file}"
      file="${PWD}/${name}.sh"
      validateAndCreateFile "${file}"
    }
  fi
  echo "${scriptContent}" >"${file}"
fi

"${EDITOR}" "${file}"

log-success "Script '$(basename "${file}")' created succefully!"
