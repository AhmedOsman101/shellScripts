#!/usr/bin/env bash

# --- SCRIPT SIGNATURE --- #
#
#            ▄▄▄▄         ██
#            ▀▀██         ▀▀
#   ▄█████▄    ██       ████     ██▄███▄    ▄█████▄   ▄████▄   ██▄███▄   ▀██  ███
#  ██▀    ▀    ██         ██     ██▀  ▀██  ██▀    ▀  ██▀  ▀██  ██▀  ▀██   ██▄ ██
#  ██          ██         ██     ██    ██  ██        ██    ██  ██    ██    ████▀
#  ▀██▄▄▄▄█    ██▄▄▄   ▄▄▄██▄▄▄  ███▄▄██▀  ▀██▄▄▄▄█  ▀██▄▄██▀  ███▄▄██▀     ███
#    ▀▀▀▀▀      ▀▀▀▀   ▀▀▀▀▀▀▀▀  ██ ▀▀▀      ▀▀▀▀▀     ▀▀▀▀    ██ ▀▀▀       ██
#                                ██                            ██         ███
#
# --- DESCRIPTION --- #
# Copies input text or arguments to the system clipboard using available clipboard tools
# --- DEPENDENCIES --- #
# - copyq | xclip | wl-copy (wl-clipboard)
# --- END SIGNATURE --- #

set -eo pipefail
trap 'exit 1' SIGUSR1

eval "$(include "lib/helpers.sh")"
eval "$(include "lib/cmdarg.sh")"
eval "$(include "check-deps")"
checkDeps "$0"

# --- cmdarg setup --- #
cmdarg_info "header" "$(get-desc "$0")"
cmdarg_parse "$@"

# ---  Main script logic --- #
str="$(input "${argv[@]}")"

[[ -z ${str} ]] && log-error "No valid input was given"

if command -v copyq >/dev/null 2>&1; then
  copyq add "${str}" &>/dev/null
  copyq copy "${str}" &>/dev/null
elif command -v wl-copy >/dev/null 2>&1; then
  printf '%s' "${str}" | wl-copy
elif command -v xclip >/dev/null 2>&1; then
  printf '%s' "${str}" | xclip -selection clipboard
else
  log-error "No clipboard tool (copq, wl-copy or xclip) was found"
fi
