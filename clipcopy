#!/usr/bin/env bash
#
# --- SCRIPT SIGNATURE --- #
#
#            ▄▄▄▄         ██
#            ▀▀██         ▀▀
#   ▄█████▄    ██       ████     ██▄███▄    ▄█████▄   ▄████▄   ██▄███▄   ▀██  ███
#  ██▀    ▀    ██         ██     ██▀  ▀██  ██▀    ▀  ██▀  ▀██  ██▀  ▀██   ██▄ ██
#  ██          ██         ██     ██    ██  ██        ██    ██  ██    ██    ████▀
#  ▀██▄▄▄▄█    ██▄▄▄   ▄▄▄██▄▄▄  ███▄▄██▀  ▀██▄▄▄▄█  ▀██▄▄██▀  ███▄▄██▀     ███
#    ▀▀▀▀▀      ▀▀▀▀   ▀▀▀▀▀▀▀▀  ██ ▀▀▀      ▀▀▀▀▀     ▀▀▀▀    ██ ▀▀▀       ██
#                                ██                            ██         ███
#
# --- DESCRIPTION --- #
# Copies input text or arguments to the system clipboard using available clipboard tools.
# --- DEPENDENCIES --- #
# - xclip | wl-copy (wl-clipboard) | copyq
# - ansifilter
# --- END SIGNATURE --- #

set -eo pipefail
trap 'exit 1' SIGUSR1

eval "$(include "lib/helpers.sh")"
eval "$(include "lib/cmdarg.sh")"
eval "$(include "check-deps")"
checkDeps "$0"

cmdarg_info "header" "$(get-desc "$0")"
cmdarg_parse "$@"
# ---  Main script logic --- #
str="$(input "${argv[@]}")"
str="$(echo "${str}" | ansifilter)"

[[ -z "${str}" ]] && log-error "No valid input was given"

if [[ "${XDG_SESSION_TYPE}" == "x11" ]] && command -v xclip &>/dev/null; then
  echo -n "${str}" | xclip -selection clipboard
elif [[ "${XDG_SESSION_TYPE}" == "wayland" ]] && command -v wl-copy &>/dev/null; then
  wl-copy "${str}"
elif command -v copyq &>/dev/null; then
  copyq add "${str}" 1>/dev/null
  copyq copy "${str}" 1>/dev/null
else
  log-error "No clipboard tool (xclip, wl-clipboard, copyq) was found"
fi
