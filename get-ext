#!/usr/bin/env bash
#
# --- SCRIPT SIGNATURE --- #
#
#
#                        ██                                      ██
#   ▄███▄██   ▄████▄   ███████              ▄████▄   ▀██  ██▀  ███████
#  ██▀  ▀██  ██▄▄▄▄██    ██                ██▄▄▄▄██    ████      ██
#  ██    ██  ██▀▀▀▀▀▀    ██       █████    ██▀▀▀▀▀▀    ▄██▄      ██
#  ▀██▄▄███  ▀██▄▄▄▄█    ██▄▄▄             ▀██▄▄▄▄█   ▄█▀▀█▄     ██▄▄▄
#   ▄▀▀▀ ██    ▀▀▀▀▀      ▀▀▀▀               ▀▀▀▀▀   ▀▀▀  ▀▀▀     ▀▀▀▀
#   ▀████▀▀
#
# --- DESCRIPTION --- #
# Exports VS Code extensions to a JSON file with options to overwrite existing files
# --- DEPENDENCIES --- #
# - code
# - jq
# --- END SIGNATURE --- #

set -eo pipefail
trap 'exit 1' SIGUSR1

eval "$(include "lib/helpers.sh")"
eval "$(include "lib/cmdarg.sh")"
eval "$(include "check-deps")"

checkDeps "$0"
# --- cmdarg setup --- #
cmdarg_info "header" "$(get-desc "$0")"
cmdarg "o" "overwrite" "Overwrite the file if it exists"
cmdarg_parse "$@"

# ---  Main script logic --- #
overwrite="${cmdarg_cfg['overwrite']}"
file="${argv[0]:-extensions.json}"

getExtensions() {
  local -a array

  # Get all VS Code extensions
  mapfile -t array < <(code --list-extensions)

  # Create the JSON content
  printf '%s\n' "${array[@]}" | jq -R . | jq -s .
}

# Check if the file already exists
if [[ -f "${file}" ]]; then
  if [[ "${overwrite}" == true ]]; then
    getExtensions >"${file}"
    log-info "${file} has been overwritten."
  else
    if gum confirm "File: ${file} exists do you want to overwrite it?" --prompt.foreground="${U_YELLOW}"; then
      getExtensions >"${file}"
      log-info "${file} has been overwritten."
    else
      terminate "No changes made"
    fi
  fi
else
  getExtensions >"${file}"
  log-info "${file} has been created."
fi
