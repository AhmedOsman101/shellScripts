#!/usr/bin/env bash

# --- SCRIPT SIGNATURE --- #
#
#
#                        ██                                      ██
#   ▄███▄██   ▄████▄   ███████              ▄████▄   ▀██  ██▀  ███████
#  ██▀  ▀██  ██▄▄▄▄██    ██                ██▄▄▄▄██    ████      ██
#  ██    ██  ██▀▀▀▀▀▀    ██       █████    ██▀▀▀▀▀▀    ▄██▄      ██
#  ▀██▄▄███  ▀██▄▄▄▄█    ██▄▄▄             ▀██▄▄▄▄█   ▄█▀▀█▄     ██▄▄▄
#   ▄▀▀▀ ██    ▀▀▀▀▀      ▀▀▀▀               ▀▀▀▀▀   ▀▀▀  ▀▀▀     ▀▀▀▀
#   ▀████▀▀
#
# --- DESCRIPTION --- #
# Exports VS Code extensions to a JSON file with options to overwrite existing files
# --- DEPENDENCIES --- #
# - code
# - jq
# --- END SIGNATURE --- #

set -euo pipefail

trap 'exit 1' SIGUSR1

source check-deps
checkDeps "$0"
# ---  Main script logic --- #
getExtensions() {
  # Get all VS Code extensions
  extensions="$(code --list-extensions)"

  # Format the extensions for the JSON file
  readarray -t array <<<"${extensions}"

  # Create the JSON content
  printf '%s\n' "${array[@]}" | jq -R . | jq -s .
}

file="${1:-'extensions.json'}"

# Check if the file already exists
if [[ -f "${file}" ]]; then
  if [[ $1 == "-o" || $2 == "-o" ]]; then
    eval getExtensions >"${file}"
    log-info "${file} has been overwritten."
  elif [[ $1 == "" || $2 == "" ]]; then
    overwrite='n'
    log-warning "${file} exists do you want to overwrite it? (y/N): "
    read -r overwrite
    if [[ ${overwrite} == "y" || ${overwrite} == "Y" ]]; then
      eval getExtensions >"${file}"
      log-info "${file} has been overwritten."
    elif [[ ${overwrite} == "n" || ${overwrite} == "N" || ${overwrite} == "" ]]; then
      log-info "Original file was not overwritten."
      exit 0
    else
      log-error "Invalid option!"
    fi
  else
    log-error "Invalid option!"
  fi
else
  touch "${file}"
  eval getExtensions >"${file}"
  log-info "${file} has been created."
fi
